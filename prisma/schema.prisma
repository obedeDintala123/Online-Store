generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id             Int             @id @default(autoincrement())
  name           String
  email          String          @unique
  password       String
  createdAt      DateTime        @default(now())
  updatedAt      DateTime        @updatedAt
  cart           Cart?
  orders         Order[]
  receivedOrders OrderReceived[]
  userProducts   UserProduct[]
}

model Product {
  id          Int         @id @default(autoincrement())
  name        String
  slug        String?     @unique
  description String?
  imageUrl    String
  category    String
  price       Decimal
  quantity    Int         @default(0)
  inStock     Boolean     @default(true)
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
  cartItems   CartItem[]
  orderItems  OrderItem[]
}

model UserProduct {
  id          Int      @id @default(autoincrement())
  name        String
  description String?
  imageUrl    String
  price       Decimal
  createdAt   DateTime @default(now())
  userId      Int
  user        User     @relation(fields: [userId], references: [id])
}

model Cart {
  id        Int        @id @default(autoincrement())
  userId    Int        @unique
  createdAt DateTime   @default(now())
  user      User       @relation(fields: [userId], references: [id])
  items     CartItem[]
}

model CartItem {
  id        Int     @id @default(autoincrement())
  cartId    Int
  productId Int
  quantity  Int     @default(1)
  price     Decimal
  cart      Cart    @relation(fields: [cartId], references: [id])
  product   Product @relation(fields: [productId], references: [id])
}

model Order {
  id        Int            @id @default(autoincrement())
  userId    Int
  total     Decimal
  status    String         @default("pending")
  createdAt DateTime       @default(now())
  user      User           @relation(fields: [userId], references: [id])
  items     OrderItem[]
  received  OrderReceived?
}

model OrderItem {
  id        Int     @id @default(autoincrement())
  orderId   Int
  productId Int
  quantity  Int
  price     Decimal
  order     Order   @relation(fields: [orderId], references: [id])
  product   Product @relation(fields: [productId], references: [id])
}

model OrderReceived {
  id         Int      @id @default(autoincrement())
  adminId    Int
  orderId    Int      @unique
  receivedAt DateTime @default(now())
  note       String?
  admin      User     @relation(fields: [adminId], references: [id])
  order      Order    @relation(fields: [orderId], references: [id])
}
